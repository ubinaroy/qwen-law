Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:01<00:03,  1.10s/it]Loading checkpoint shards:  50%|█████     | 2/4 [00:01<00:01,  1.46it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:01<00:00,  3.27it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:01<00:00,  2.42it/s]
Some parameters are on the meta device because they were offloaded to the cpu.
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.10.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.11.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.12.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.13.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.14.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.15.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.16.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.17.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.18.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.19.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.20.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.21.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.22.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.23.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.24.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.25.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.26.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.self_attn.q_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.self_attn.q_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.self_attn.k_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.self_attn.k_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.self_attn.v_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.self_attn.v_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.self_attn.o_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.self_attn.o_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.mlp.gate_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.mlp.gate_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.mlp.up_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.mlp.up_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.mlp.down_proj.lora_A.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/torch/nn/modules/module.py:2397: UserWarning: for model.layers.27.mlp.down_proj.lora_B.default.weight: copying from a non-meta parameter in the checkpoint to a meta parameter in the current model, which is a no-op. (Did you mean to pass `assign=True` to assign items in the state dictionary to their corresponding key in the module instead of copying them in place?)
  warnings.warn(
You shouldn't move a model that is dispatched using accelerate hooks.
Traceback (most recent call last):
  File "/data/workbench/inference.py", line 9, in <module>
    model = AutoModelForCausalLM.from_pretrained(
  File "/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/transformers/models/auto/auto_factory.py", line 564, in from_pretrained
    return model_class.from_pretrained(
  File "/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/transformers/modeling_utils.py", line 4309, in from_pretrained
    model.load_adapter(
  File "/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/transformers/integrations/peft.py", line 251, in load_adapter
    self._dispatch_accelerate_model(
  File "/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/transformers/integrations/peft.py", line 498, in _dispatch_accelerate_model
    dispatch_model(
  File "/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/accelerate/big_modeling.py", line 496, in dispatch_model
    model.to(device)
  File "/root/miniconda3/envs/qwen_law/lib/python3.10/site-packages/accelerate/big_modeling.py", line 458, in wrapper
    raise RuntimeError("You can't move a model that has some modules offloaded to cpu or disk.")
RuntimeError: You can't move a model that has some modules offloaded to cpu or disk.
